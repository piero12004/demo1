DROP DATABASE IF EXISTS CineHH;
CREATE DATABASE CineHH;
USE CineHH;

DROP TABLE IF EXISTS Peliculas;
CREATE TABLE IF NOT EXISTS Peliculas (
peli_cod char(5) NOT NULL DEFAULT '',
PRIMARY KEY (peli_cod),
peli_nom varchar(30),
imagen_url varchar(60)
);

INSERT INTO peliculas (peli_cod, peli_nom, imagen_url) VALUES
("P0001", "Avengers", "/imagenes/Avengers.jpg"),
("P0002", "Batman", "/imagenes/Batman.jpg");

DROP TABLE IF EXISTS Usuarios;
CREATE TABLE IF NOT EXISTS Usuarios(
	ucod char(5) NOT NULL DEFAULT '',
    PRIMARY KEY (ucod),
    nombre varchar(20),
    apellido varchar(30),
    telefono integer,
    usuario varchar(50),
    contrasenia varchar(255),
    rol varchar(20)
) ;

DROP TABLE IF EXISTS Admins;
CREATE TABLE IF NOT EXISTS Admins(
	admin_cod char(5),
    PRIMARY KEY (admin_cod),
    admin_user varchar(30),
    clave varchar(30)
);

select * from Admins;
select * from Usuarios;

INSERT INTO usuarios (ucod, nombre, apellido, telefono, usuario, contrasenia, rol)
VALUES ('A0003', 'Admin', 'Cine', '123456789', 'Geo', '$2a$12$L1KTwxu8vGYrm1EmrAfkf.jMV1Jzj7chwVlq3fu/yt4qYjJ.IS1R2', 'ROLE_ADMIN');
##contrasenia admin123
INSERT INTO Admins (admin_cod, admin_user, clave) VALUES ("A0001","AdminPOG","12004");
INSERT INTO Admins (admin_cod, admin_user, clave) VALUES ("A0002","AdminGeorge","12004");


DROP TABLE IF EXISTS Facturas;
CREATE TABLE IF NOT EXISTS Facturas(
	fac_cod char(5),
    PRIMARY KEY (fac_cod),
    ucod char(5),
    FOREIGN KEY (ucod) REFERENCES Usuarios(ucod),
    fecha date
);
 
DROP TABLE IF EXISTS detalle_factura;
CREATE TABLE IF NOT EXISTS detalle_factura (
    cod_detalle CHAR(5) PRIMARY KEY,
    fac_cod CHAR(5),
    peli_cod CHAR(5),
    asientos INT,
    fecha_funcion DATE,
    horario_funcion VARCHAR(10),
    FOREIGN KEY (fac_cod) REFERENCES Facturas(fac_cod),
    FOREIGN KEY (peli_cod) REFERENCES Peliculas(peli_cod)
);

DELIMITER $$
DROP PROCEDURE IF EXISTS reporte_fac$$
CREATE PROCEDURE reporte_fac(IN id_usuario char(5))
BEGIN
	SELECT u.ucod,nombre, apellido, fecha
    FROM usuarios u INNER JOIN facturas f ON u.ucod = f.ucod
    WHERE u.ucod = id_usuario;
END$$
DELIMITER ;

DELIMITER $$
DROP PROCEDURE IF EXISTS detalle_factura_por_codigo$$
CREATE PROCEDURE detalle_factura_por_codigo(IN fac_codigo CHAR(5))
BEGIN
	SELECT 
		f.fac_cod AS codFactura,
		u.nombre AS nombreCliente,
		u.apellido AS apellidoCliente,
		p.peli_nom AS tituloPelicula,
		f.fecha AS fechaFactura,
		df.asientos AS cantidadAsientos,
		df.asientos * 15 AS subtotal,
		df.fecha_funcion,
		df.horario_funcion
	FROM 
		Facturas f
	INNER JOIN Usuarios u ON f.ucod = u.ucod
	INNER JOIN detalle_factura df ON f.fac_cod = df.fac_cod
	INNER JOIN Peliculas p ON df.peli_cod = p.peli_cod
	WHERE 
		f.fac_cod = fac_codigo;
END$$
DELIMITER ;

select * from Usuarios;
select*from Admins;
select*from peliculas;
select*from facturas;
select*from detalle_factura;
show tables;
